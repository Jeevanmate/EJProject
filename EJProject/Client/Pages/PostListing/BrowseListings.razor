@page "/ListingsPage/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpInterceptorService _interceptor
@implements IDisposable


<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Listings</title>
    <link rel="stylesheet" href="/css/Product.css" />
</head>
<body>
    <script>
        function openModal(imageUrl) {
            var modal = document.getElementById("imageModal");
            var modalImage = document.getElementById("modalImage");
            modalImage.src = imageUrl;
            modal.style.display = "block";
        }

        function closeModal() {
            var modal = document.getElementById("imageModal");
            modal.style.display = "none";
        }
    </script>
    <div id="D1">
        <div id="D2">
            <h2>Listings</h2>
        </div>
        <p>Check out all our available products here!Yay</p>
        <div id="D3">
            <p>View by Category</p>
        </div>
    </div>
    <div id="imageModal" class="modal">
        <span class="close" onclick="closeModal()">&times;</span>
        <img id="modalImage" class="modal-content" />
    </div>
</body>
</html>
<br />

<a href="/ListingsPage/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Listing
</a>
<br />
<br />



@if (Products == null)
{
    <div class="alert alert-info">Loading Products...</div>
}

else
{
    <div>
        <button class="btn btn-primary" @onclick="@(() => SetViewStatus("View"))">View Products</button>
        <button class="btn btn-warning" @onclick="@(() => SetViewStatus("Edit"))">Edit Products</button>
        <div>
            <InputText @bind-Value="@inputTextBox" class="form-control" label="password" />
        </div>
        <p>Please enter password to gain access to edit and delete products</p>

    </div>
    @if (ViewingStatus == "View")
    {

        <table class="table table-responsive" id="productsTable">
            <thead>
                <tr>
                    <th>Seller:</th>
                    <th>Product:</th>
                    <th>Category:</th>
                    <th>Price:</th>
                    <th>Condition:</th>
                    <th>Image:</th>
                    <th>Description:</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Products)
                {
                    <tr>
                        <td>@product.Seller.Name</td>
                        <td>@product.ProductName</td>
                        <td>@product.Category</td>
                        <td>@product.Price</td>
                        <td>@product.Condition</td>
                        <td><a href="/ListingsPage/view/@product.ProductID"><img src="@product.Image" class="rounded" style="max-height: 100px;" onclick="openModal('@product.Image')" /></a></td>
                        <td>@product.Description</td>

                        <td>
                            <a href="/ListingsPage/view/@product.ProductID" class="btn btn-primary">
                                <span class="oi oi-book"></span>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    }
    else if (ViewingStatus == "Edit")
    {
        @if (@inputTextBox == "Permission" || inputTextBox == "permission")
        {
            <table class="table table-responsive" id="productsTable">
                <thead>
                    <tr>
                        <th>Seller:</th>
                        <th>Product:</th>
                        <th>Category:</th>
                        <th>Price:</th>
                        <th>Condition:</th>
                        <th>Image:</th>
                        <th>Description:</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in Products)
                    {
                        <tr>
                            <td>@product.Seller.Name</td>
                            <td>@product.ProductName</td>
                            <td>@product.Category</td>
                            <td>@product.Price</td>
                            <td>@product.Condition</td>
                            <td><a href="/ListingsPage/view/@product.ProductID"><img src="@product.Image" class="rounded" style="max-height: 100px;" onclick="openModal('@product.Image')" /></a></td>
                            <td>@product.Description</td>

                            <td>
                                <a href="/ListingsPage/view/@product.ProductID" class="btn btn-primary">
                                    <span class="oi oi-book"></span>
                                </a>
                                <a href="/ListingsPage/edit/@product.ProductID" class="btn btn-warning">
                                    <span class="oi oi-pencil"></span>
                                </a>
                                <button class="btn btn-danger" @onclick="@(()=>Delete(product.ProductID))">
                                    <span class="oi oi-delete"></span>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else if (inputTextBox == null)
        {
            <div>
                <p>
                    You are required to enter a password to get the permission to edit or delete products
                </p>
            </div>
        }
        else
        {
            <div>
                <p>
                    Wrong password. Try again
                </p>
            </div>
        }

    }


}


@code {
    private string inputTextBox;
    private string ViewingStatus;
    private bool isDataTableInitialized = false;

    private void SetViewStatus(string status)
    {
        ViewingStatus = status;
    }


    private List<Product>? Products;



    protected async override Task OnInitializedAsync()
    {
        _interceptor.MonitorEvent();
        Products = await _client.GetFromJsonAsync<List<Product>>($"{Endpoints.ProductsEndpoint}");

        if (!isDataTableInitialized && Products != null)
        {
            Console.WriteLine("Initializing DataTable");
            await js.InvokeVoidAsync("AddDataTable", "#productsTable");
            isDataTableInitialized = true;
        }


    }


    async Task Delete(int productId)
    {
        if (Products != null)
        {
            var product = Products.First(q => q.ProductID == productId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {product.ProductName}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.ProductsEndpoint}/{productId}");
                await OnInitializedAsync();
            }
        }
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && isDataTableInitialized)
        {
            await js.InvokeVoidAsync("AddDataTable", "#productsTable");
        }
    }

    public void Dispose()
    {
        if (isDataTableInitialized)
        {
            Console.WriteLine("Disposing DataTable");
            js.InvokeVoidAsync("DataTablesDispose", "#productsTable");
        }
    }
}