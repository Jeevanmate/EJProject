@*
    @inject HttpClient _client
<h3>Listings</h3>


<EditForm Model="@product" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled" >

        <div class="form-group">
            <label for="Name">Name: </label>
            <div>
                <InputText @bind-Value="@product.ProductName" id="Name" class="form-control" />
                <ValidationMessage For="@(() => product.ProductName)" />
            </div>
        </div>

        <div class="form-group">
            <label for="Image">Image: </label>
            <div>
                <InputFile id="Image" class="form-control" OnChange="HandleFileChange" />
                <ValidationMessage For="@(() => make.Image)" />
            </div>
        </div>
    

    </fieldset>
    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="products" />
</EditForm>
@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Product? product { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Buyer>? Buyers;
    private IList<Trade>? Trades;
    private IList<Seller>? Sellers;

    protected async override Task OnInitializedAsync()
    {
        Makes = await _client.GetFromJsonAsync<List<Make>>($"{Endpoints.MakesEndPoint}");
        


    }


}
*@