@page "/sellers/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpInterceptorService _interceptor
@implements IDisposable


<h3 class="card-title"> Sellers</h3>
<a href="/sellers/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Seller
</a>
<br />
<br />
<link rel="stylesheet" href="/css/Seller.css" />

<div>
    <InputText @bind-Value="@inputTextBox" class="form-control" label="password" />
</div>

@if (Sellers == null)
{
    <div class="alert alert-info">Loading Sellers...</div>
}

else
{
    @if (@inputTextBox == "Jeevan" || inputTextBox == "jeevan")
    {
        <table class="table table-responsive" id="sellersTable">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Phone Number</th>
                    <th>Email</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var seller in Sellers)
                {
                    <tr>
                        <td>@seller.Name</td>
                        <td>@seller.PhoneNumber</td>
                        <td>@seller.Email</td>

                        <td>
                            <a href="/sellers/view/@seller.SellerID" class="btn btn-primary">
                                <span class="oi oi-book"></span>
                            </a>
                            <a href="/sellers/edit/@seller.SellerID" class="btn btn-warning">
                                <span class="oi oi-pencil"></span>
                            </a>
                            <button class="btn btn-danger" @onclick="@(()=>Delete(seller.SellerID))">
                                <span class="oi oi-delete"></span>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else if(inputTextBox == null)
    {
        <div>
            <p>Please input correct password to gain access to view Sellers</p>
        </div>
    }
    else
    {
      <div>
          <p>You have entered the wrong password, Please try again</p>
      </div>
    }

}

@code {
    private string inputTextBox;
    private List<Seller>? Sellers;

    protected async override Task OnInitializedAsync()
    {
        _interceptor.MonitorEvent();
        Sellers = await _client.GetFromJsonAsync<List<Seller>>($"{Endpoints.SellersEndpoint}");
    }

    async Task Delete(int sellerId)
    {
        if(Sellers != null)
        {
            var seller = Sellers.First(q => q.SellerID == sellerId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {seller.Name}?");
            if(confirm)
            {
                await _client.DeleteAsync($"{Endpoints.SellersEndpoint}/{sellerId}");
                await OnInitializedAsync();
            }
        }
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await js.InvokeVoidAsync("AddDataTable", "#sellersTable");
    }

    public void Dispose()
    {
        _interceptor.DisposeEvent();
        js.InvokeVoidAsync("DataTablesDispose", "#sellersTable");
    }

   
}
